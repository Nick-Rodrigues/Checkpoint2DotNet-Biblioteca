// <auto-generated />
using System;
using Checkpoint2DotNet_Biblioteca.Persistencia;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Oracle.EntityFrameworkCore.Metadata;

#nullable disable

namespace Checkpoint2DotNet_Biblioteca.Migrations
{
    [DbContext(typeof(FiapDbContext))]
    [Migration("20240501175936_AutorAndLivro")]
    partial class AutorAndLivro
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            OracleModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AutorLivro", b =>
                {
                    b.Property<int>("AutoresAutorId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int>("LivrosLivroId")
                        .HasColumnType("NUMBER(10)");

                    b.HasKey("AutoresAutorId", "LivrosLivroId");

                    b.HasIndex("LivrosLivroId");

                    b.ToTable("AutorLivro");
                });

            modelBuilder.Entity("Checkpoint2DotNet_Biblioteca.Models.Autor", b =>
                {
                    b.Property<int>("AutorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AutorId"));

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.HasKey("AutorId");

                    b.ToTable("T_NET_Autores");
                });

            modelBuilder.Entity("Checkpoint2DotNet_Biblioteca.Models.Endereco", b =>
                {
                    b.Property<int>("EnderecoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EnderecoId"));

                    b.Property<int>("CEP")
                        .HasMaxLength(9)
                        .HasColumnType("NUMBER(10)");

                    b.Property<string>("Complemento")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<int>("Numero")
                        .HasColumnType("NUMBER(10)");

                    b.HasKey("EnderecoId");

                    b.ToTable("T_NET_Endereços");
                });

            modelBuilder.Entity("Checkpoint2DotNet_Biblioteca.Models.Livro", b =>
                {
                    b.Property<int>("LivroId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LivroId"));

                    b.Property<DateTime>("DataLancamento")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<string>("Genero")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.HasKey("LivroId");

                    b.ToTable("T_NET_Livros");
                });

            modelBuilder.Entity("AutorLivro", b =>
                {
                    b.HasOne("Checkpoint2DotNet_Biblioteca.Models.Autor", null)
                        .WithMany()
                        .HasForeignKey("AutoresAutorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Checkpoint2DotNet_Biblioteca.Models.Livro", null)
                        .WithMany()
                        .HasForeignKey("LivrosLivroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
